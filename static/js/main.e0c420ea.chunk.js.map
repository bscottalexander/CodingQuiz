{"version":3,"sources":["components/Spacer/Spacer.tsx","components/Padding/Padding.tsx","pages/StartQuiz/StartQuiz.tsx","pages/QuizResults/QuizResults.tsx","pages/QuizQuestion/QuizQuestion.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Spacer","styled","div","props","undefined","height","width","Padding","left","right","top","bottom","PageContainer","StartQuizPageRoute","StartQuizPage","setCurrentPageURL","startTimer","Typography","variant","Button","color","onClick","QuizQuestionPageRoute","InputContainer","QuizResultsPageRoute","QuizResultsPage","time","inputRef","createRef","useState","isDisabled","setIsDisabled","JSON","parse","window","localStorage","getItem","leads","setLeads","label","disabled","value","current","setItem","stringify","currLeads","dense","map","lead","index","primary","QuizQuestionPage","decrementTime","stopTimer","questions","question","answers","answerIndex","questionIndex","setQuestionIndex","React","selectedIndex","setSelectedIndex","FormControl","component","RadioGroup","aria-label","name","onChange","event","parseInt","target","answer","FormControlLabel","control","Radio","length","App","currentPageURL","setTime","timer","setTimer","clearInterval","StartQuiz","interval","setInterval","currentTime","QuizQuestion","amount","QuizResults","Error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0c420ea.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\ninterface SpacerProps {\n  height?: number;\n  width?: number;\n}\n\nconst Spacer = styled.div`\n  min-height: ${(props: SpacerProps) =>\n    props.height !== undefined ? `${props.height}px` : \"unset\"};\n  min-width: ${(props: SpacerProps) =>\n    props.width !== undefined ? `${props.width}px` : \"unset\"};\n`;\n\nexport default Spacer;\n","import styled from \"styled-components\";\n\ninterface PaddingProps {\n  left?: number;\n  right?: number;\n  top?: number;\n  bottom?: number;\n}\n\nconst Padding = styled.div`\n  padding-left: ${(props: PaddingProps) =>\n    props.left ? `${props.left}px` : \"unset\"};\n  padding-right: ${(props: PaddingProps) =>\n    props.right ? `${props.right}px` : \"unset\"};\n  padding-top: ${(props: PaddingProps) =>\n    props.top ? `${props.top}px` : \"unset\"};\n  padding-bottom: ${(props: PaddingProps) =>\n    props.bottom ? `${props.bottom}px` : \"unset\"};\n`;\n\nexport default Padding;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styled from \"styled-components\";\nimport Spacer from \"components/Spacer/Spacer\";\nimport { QuizQuestionPageRoute } from \"pages/QuizQuestion/QuizQuestion\";\n\nconst PageContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\ninterface StartQuizPageProps {\n  setCurrentPageURL: (url: string) => void;\n  startTimer: () => void;\n}\n\nconst StartQuizPage = ({\n  setCurrentPageURL,\n  startTimer,\n}: StartQuizPageProps) => {\n  const onButtonClick = () => {\n    startTimer();\n    setCurrentPageURL(QuizQuestionPageRoute);\n  };\n\n  return (\n    <PageContainer>\n      <Typography variant=\"h3\">Coding Quiz</Typography>\n      <Spacer height={40} />\n      <Button variant=\"contained\" color=\"primary\" onClick={onButtonClick}>\n        Start\n      </Button>\n    </PageContainer>\n  );\n};\n\nexport const StartQuizPageRoute = \"/start\";\n\nexport default StartQuizPage;\n","import React, { createRef, useState } from \"react\";\nimport MuiTypography from \"@material-ui/core/Typography\";\nimport MuiTextField from \"@material-ui/core/TextField\";\nimport MuiButton from \"@material-ui/core/Button\";\nimport MuiList from \"@material-ui/core/List\";\nimport MuiListItem from \"@material-ui/core/ListItem\";\nimport MuiListItemText from \"@material-ui/core/ListItemText\";\n\nimport styled from \"styled-components\";\nimport Padding from \"components/Padding/Padding\";\nimport { StartQuizPageRoute } from \"pages/StartQuiz/StartQuiz\";\n\nconst PageContainer = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\ninterface QuizResultsPageProps {\n  time: number;\n  setCurrentPageURL: (url: string) => void;\n}\n\nconst InputContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst QuizResultsPage = ({ time, setCurrentPageURL }: QuizResultsPageProps) => {\n  const inputRef = createRef<HTMLInputElement>();\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [leads, setLeads] = useState<string[]>(\n    JSON.parse(window.localStorage.getItem(\"leads\") || \"[]\")\n  );\n\n  const onButtonClick = () => {\n    setIsDisabled(true);\n    const value = inputRef.current?.value || \"\";\n    window.localStorage.setItem(\n      \"leads\",\n      JSON.stringify([...leads, `${value} | ${time}`])\n    );\n    setLeads((currLeads) => [...currLeads, `${value} | ${time}`]);\n    if (inputRef.current?.value) {\n      inputRef.current.value = \"\";\n    }\n  };\n\n  const onStartOver = () => {\n    setCurrentPageURL(StartQuizPageRoute);\n  };\n\n  return (\n    <PageContainer>\n      <Padding top={20} bottom={20} right={20} left={20}>\n        <MuiTypography variant=\"h3\">Score: {time}</MuiTypography>\n        <InputContainer>\n          <MuiTextField\n            label=\"Name\"\n            inputRef={inputRef}\n            disabled={isDisabled}\n          />\n          <MuiButton onClick={onButtonClick} disabled={isDisabled}>\n            Add\n          </MuiButton>\n        </InputContainer>\n        <MuiList dense={true}>\n          {leads.map((lead, index) => (\n            <MuiListItem key={index}>\n              <MuiListItemText primary={lead} />\n            </MuiListItem>\n          ))}\n        </MuiList>\n        <MuiButton onClick={onStartOver}>Start Over</MuiButton>\n      </Padding>\n    </PageContainer>\n  );\n};\n\nexport const QuizResultsPageRoute = \"/results\";\n\nexport default QuizResultsPage;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styled from \"styled-components\";\nimport Spacer from \"components/Spacer/Spacer\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { QuizResultsPageRoute } from \"pages/QuizResults/QuizResults\";\n\nconst PageContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\ninterface QuizQuestionPageProps {\n  time: number;\n  stopTimer: () => void;\n  decrementTime: (amount: number) => void;\n  setCurrentPageURL: (url: string) => void;\n}\n\nconst QuizQuestionPage = ({\n  time,\n  decrementTime,\n  setCurrentPageURL,\n  stopTimer,\n}: QuizQuestionPageProps) => {\n  const questions = [\n    {\n      question: \"What does HTML stand for?\",\n      answers: [\n        \"Hyperlinks and Text Markup Language\",\n        \"Home Tool Markup Language\",\n        \"Hyper Text Markup Language\",\n      ],\n      answerIndex: 2,\n    },\n    {\n      question: \"Who is making the Web standards?\",\n      answers: [\n        \"The World Wide Web Consortium\",\n        \"Mozilla\",\n        \"Microsoft\",\n        \"Google\",\n      ],\n      answerIndex: 0,\n    },\n    {\n      question: \"Where is the correct place to insert a JavaScript?\",\n      answers: [\n        \"The <Body> Section\",\n        \"The <Head> Section\",\n        \"Both the <Body> and <Head> Section are Correct\",\n      ],\n      answerIndex: 0,\n    },\n    {\n      question: \"What are variables used for in JavaScript Programs?\",\n      answers: [\n        \" Storing numbers, dates, or other values\",\n        \"Varying randomly\",\n        \"Causing high-school algebra flashbacks\",\n      ],\n      answerIndex: 0,\n    },\n  ];\n\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [selectedIndex, setSelectedIndex] = React.useState<number>(0);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedIndex(parseInt(event.target.value));\n  };\n\n  const onButtonClick = () => {\n    if (questions[questionIndex].answerIndex !== selectedIndex) {\n      decrementTime(10);\n    } else {\n      if (questions.length - 1 !== questionIndex) {\n        setQuestionIndex(questionIndex + 1);\n      } else {\n        stopTimer();\n        setQuestionIndex(questionIndex + 1);\n        setCurrentPageURL(QuizResultsPageRoute);\n      }\n    }\n  };\n\n  return (\n    <PageContainer>\n      <Spacer height={40} />\n      <Typography variant=\"h6\">{time} seconds</Typography>\n      <Spacer height={40} />\n      <Typography variant=\"h6\">\n        Question: {questions[questionIndex].question}\n      </Typography>\n      <Spacer height={20} />\n      <FormControl component=\"fieldset\">\n        <RadioGroup\n          aria-label=\"answers\"\n          name=\"answers\"\n          value={selectedIndex}\n          onChange={handleChange}\n        >\n          {questions[questionIndex].answers.map((answer, index) => (\n            <FormControlLabel\n              key={answer}\n              value={index}\n              control={<Radio />}\n              label={answer}\n            />\n          ))}\n        </RadioGroup>\n      </FormControl>\n      <Spacer height={20} />\n      <Button variant=\"contained\" color=\"primary\" onClick={onButtonClick}>\n        {questions.length - 1 !== questionIndex ? \"Next Question\" : \"Finish\"}\n      </Button>\n    </PageContainer>\n  );\n};\n\nexport const QuizQuestionPageRoute = \"/question\";\n\nexport default QuizQuestionPage;\n","import QuizQuestionPage, {\n  QuizQuestionPageRoute,\n} from \"pages/QuizQuestion/QuizQuestion\";\nimport QuizResultsPage, {\n  QuizResultsPageRoute,\n} from \"pages/QuizResults/QuizResults\";\nimport StartQuizPage, { StartQuizPageRoute } from \"pages/StartQuiz/StartQuiz\";\nimport React, { useState } from \"react\";\n\nconst App = () => {\n  const [currentPageURL, setCurrentPageURL] = useState(StartQuizPageRoute);\n  const [time, setTime] = useState(100);\n  const [timer, setTimer] = useState<number | undefined>(undefined);\n\n  const startTimer = () => {\n    const interval = (setInterval(() => {\n      setTime((currentTime) => {\n        if (currentTime - 1 < 0) {\n          stopTimer();\n          setCurrentPageURL(QuizResultsPageRoute);\n          return 0;\n        } else {\n          return currentTime - 1;\n        }\n      });\n    }, 1000) as unknown) as number;\n    setTimer(interval);\n  };\n\n  const stopTimer = () => {\n    clearInterval(timer);\n  };\n\n  const decrementTime = (amount: number) => {\n    setTime((currentTime) => {\n      if (currentTime - amount < 0) {\n        stopTimer();\n        setCurrentPageURL(QuizResultsPageRoute);\n        return 0;\n      } else {\n        return currentTime - amount;\n      }\n    });\n  };\n\n  switch (currentPageURL) {\n    case StartQuizPageRoute: {\n      return (\n        <StartQuizPage\n          setCurrentPageURL={setCurrentPageURL}\n          startTimer={startTimer}\n        />\n      );\n    }\n    case QuizQuestionPageRoute: {\n      return (\n        <QuizQuestionPage\n          time={time}\n          stopTimer={stopTimer}\n          decrementTime={decrementTime}\n          setCurrentPageURL={setCurrentPageURL}\n        />\n      );\n    }\n    case QuizResultsPageRoute: {\n      return (\n        <QuizResultsPage time={time} setCurrentPageURL={setCurrentPageURL} />\n      );\n    }\n    default: {\n      throw new Error(\"Page does not exist\");\n    }\n  }\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}